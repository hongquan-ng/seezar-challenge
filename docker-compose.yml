services:
    # this instance will be used to store embeddings also used by langfuse and dbos
    pgvector:
        image: pgvector/pgvector:pg17-trixie
        restart: always
        healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U postgres']
            interval: 3s
            timeout: 3s
            retries: 10
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - 127.0.0.1:5432:5432
        volumes:
            - pgvector_data:/var/lib/postgresql/data
            - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    redis:
        image: redis:latest
        restart: always
        command: >
            --requirepass ${REDIS_AUTH}
        ports:
            - 127.0.0.1:6379:6379
        healthcheck:
            test: ['CMD', 'redis-cli', 'ping']
            interval: 3s
            timeout: 10s
            retries: 10
        volumes:
            - redis_data:/data

    redisinsight:
        image: redis/redisinsight:latest
        restart: always
        ports:
            - 5540:5540
        environment:
            RI_REDIS_HOST0: ${REDIS_HOST:-redis}
            RI_REDIS_PORT0: ${REDIS_PORT:-6379}
            RI_REDIS_USERNAME0: default
            RI_REDIS_PASSWORD0: ${REDIS_AUTH:-redispassword} # CHANGEME
        depends_on:
            - redis
        volumes:
            - redisinsight_data:/data

    minio:
        image: minio/minio:latest
        restart: always
        entrypoint: sh
        # create the 'langfuse' bucket before starting the service
        command: -c 'mkdir -p /data/langfuse && minio server --address ":9000" --console-address ":9001" /data'
        environment:
            MINIO_ROOT_USER: ${MINIO_ROOT_USER}
            MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
        ports:
            - 9090:9000
            - 127.0.0.1:9091:9001
        healthcheck:
            test: ['CMD', 'mc', 'ready', 'local']
            interval: 1s
            timeout: 5s
            retries: 5
            start_period: 1s
        volumes:
            - minio_data:/data

    clickhouse:
        image: clickhouse/clickhouse-server:latest
        restart: always
        user: '101:101'
        environment:
            CLICKHOUSE_DB: ${CLICKHOUSE_DB}
            CLICKHOUSE_USER: ${CLICKHOUSE_USER}
            CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
        ports:
            - 127.0.0.1:8123:8123
            - 127.0.0.1:9000:9000
        healthcheck:
            test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
            interval: 5s
            timeout: 5s
            retries: 10
            start_period: 1s
        volumes:
            - clickhouse_data:/var/lib/clickhouse
            - clickhouse_logs:/var/log/clickhouse-server

    langfuse-worker:
        image: langfuse/langfuse-worker:3
        restart: always
        depends_on: &langfuse-depends-on
            pgvector:
                condition: service_healthy
            minio:
                condition: service_healthy
            redis:
                condition: service_healthy
            clickhouse:
                condition: service_healthy
        ports:
            - 127.0.0.1:3030:3030
        environment: &langfuse-worker-env
            NEXTAUTH_URL: http://localhost:3000
            DATABASE_URL: ${LNAGFUSE_DATABASE_URL}
            SALT: ${LANGFUSE_SALT}
            ENCRYPTION_KEY: ${LANGFUSE_ENCRYPTION_KEY}
            TELEMETRY_ENABLED: ${TELEMETRY_ENABLED:-true}
            LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES: ${LANGFUSE_ENABLE_EXPERIMENTAL_FEATURES:-true}
            CLICKHOUSE_MIGRATION_URL: ${CLICKHOUSE_MIGRATION_URL:-clickhouse://clickhouse:9000}
            CLICKHOUSE_URL: ${CLICKHOUSE_URL:-http://clickhouse:8123}
            CLICKHOUSE_USER: ${CLICKHOUSE_USER:-clickhouse}
            CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD:-clickhouse} # CHANGEME
            CLICKHOUSE_CLUSTER_ENABLED: ${CLICKHOUSE_CLUSTER_ENABLED:-false}
            LANGFUSE_USE_AZURE_BLOB: ${LANGFUSE_USE_AZURE_BLOB:-false}
            LANGFUSE_S3_EVENT_UPLOAD_BUCKET: ${LANGFUSE_S3_EVENT_UPLOAD_BUCKET:-langfuse}
            LANGFUSE_S3_EVENT_UPLOAD_REGION: ${LANGFUSE_S3_EVENT_UPLOAD_REGION:-auto}
            LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID: ${LANGFUSE_S3_EVENT_UPLOAD_ACCESS_KEY_ID:-minio}
            LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY: ${LANGFUSE_S3_EVENT_UPLOAD_SECRET_ACCESS_KEY:-miniosecret} # CHANGEME
            LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT: ${LANGFUSE_S3_EVENT_UPLOAD_ENDPOINT:-http://minio:9000}
            LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE: ${LANGFUSE_S3_EVENT_UPLOAD_FORCE_PATH_STYLE:-true}
            LANGFUSE_S3_EVENT_UPLOAD_PREFIX: ${LANGFUSE_S3_EVENT_UPLOAD_PREFIX:-events/}
            LANGFUSE_S3_MEDIA_UPLOAD_BUCKET: ${LANGFUSE_S3_MEDIA_UPLOAD_BUCKET:-langfuse}
            LANGFUSE_S3_MEDIA_UPLOAD_REGION: ${LANGFUSE_S3_MEDIA_UPLOAD_REGION:-auto}
            LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID: ${LANGFUSE_S3_MEDIA_UPLOAD_ACCESS_KEY_ID:-minio}
            LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY: ${LANGFUSE_S3_MEDIA_UPLOAD_SECRET_ACCESS_KEY:-miniosecret} # CHANGEME
            LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT: ${LANGFUSE_S3_MEDIA_UPLOAD_ENDPOINT:-http://localhost:9090}
            LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE: ${LANGFUSE_S3_MEDIA_UPLOAD_FORCE_PATH_STYLE:-true}
            LANGFUSE_S3_MEDIA_UPLOAD_PREFIX: ${LANGFUSE_S3_MEDIA_UPLOAD_PREFIX:-media/}
            LANGFUSE_S3_BATCH_EXPORT_ENABLED: ${LANGFUSE_S3_BATCH_EXPORT_ENABLED:-false}
            LANGFUSE_S3_BATCH_EXPORT_BUCKET: ${LANGFUSE_S3_BATCH_EXPORT_BUCKET:-langfuse}
            LANGFUSE_S3_BATCH_EXPORT_PREFIX: ${LANGFUSE_S3_BATCH_EXPORT_PREFIX:-exports/}
            LANGFUSE_S3_BATCH_EXPORT_REGION: ${LANGFUSE_S3_BATCH_EXPORT_REGION:-auto}
            LANGFUSE_S3_BATCH_EXPORT_ENDPOINT: ${LANGFUSE_S3_BATCH_EXPORT_ENDPOINT:-http://minio:9000}
            LANGFUSE_S3_BATCH_EXPORT_EXTERNAL_ENDPOINT: ${LANGFUSE_S3_BATCH_EXPORT_EXTERNAL_ENDPOINT:-http://localhost:9090}
            LANGFUSE_S3_BATCH_EXPORT_ACCESS_KEY_ID: ${LANGFUSE_S3_BATCH_EXPORT_ACCESS_KEY_ID:-minio}
            LANGFUSE_S3_BATCH_EXPORT_SECRET_ACCESS_KEY: ${LANGFUSE_S3_BATCH_EXPORT_SECRET_ACCESS_KEY:-miniosecret} # CHANGEME
            LANGFUSE_S3_BATCH_EXPORT_FORCE_PATH_STYLE: ${LANGFUSE_S3_BATCH_EXPORT_FORCE_PATH_STYLE:-true}
            LANGFUSE_INGESTION_QUEUE_DELAY_MS: ${LANGFUSE_INGESTION_QUEUE_DELAY_MS:-}
            LANGFUSE_INGESTION_CLICKHOUSE_WRITE_INTERVAL_MS: ${LANGFUSE_INGESTION_CLICKHOUSE_WRITE_INTERVAL_MS:-}
            REDIS_HOST: ${REDIS_HOST:-redis}
            REDIS_PORT: ${REDIS_PORT:-6379}
            REDIS_AUTH: ${REDIS_AUTH:-myredissecret} # CHANGEME
            REDIS_TLS_ENABLED: ${REDIS_TLS_ENABLED:-false}
            REDIS_TLS_CA: ${REDIS_TLS_CA:-/certs/ca.crt}
            REDIS_TLS_CERT: ${REDIS_TLS_CERT:-/certs/redis.crt}
            REDIS_TLS_KEY: ${REDIS_TLS_KEY:-/certs/redis.key}
            EMAIL_FROM_ADDRESS: ${EMAIL_FROM_ADDRESS:-}
            SMTP_CONNECTION_URL: ${SMTP_CONNECTION_URL:-}

    langfuse-web:
        image: langfuse/langfuse:3
        restart: always
        depends_on: *langfuse-depends-on
        ports:
            - 3000:3000
            - 4318:4318
        environment:
            <<: *langfuse-worker-env
            NEXTAUTH_SECRET: ${NEXTAUTH_SECRET} # CHANGEME
            LANGFUSE_INIT_ORG_ID: ${LANGFUSE_INIT_ORG_ID:-}
            LANGFUSE_INIT_ORG_NAME: ${LANGFUSE_INIT_ORG_NAME:-}
            LANGFUSE_INIT_PROJECT_ID: ${LANGFUSE_INIT_PROJECT_ID:-}
            LANGFUSE_INIT_PROJECT_NAME: ${LANGFUSE_INIT_PROJECT_NAME:-}
            LANGFUSE_INIT_PROJECT_PUBLIC_KEY: ${LANGFUSE_INIT_PROJECT_PUBLIC_KEY:-}
            LANGFUSE_INIT_PROJECT_SECRET_KEY: ${LANGFUSE_INIT_PROJECT_SECRET_KEY:-}
            LANGFUSE_INIT_USER_EMAIL: ${LANGFUSE_INIT_USER_EMAIL:-}
            LANGFUSE_INIT_USER_NAME: ${LANGFUSE_INIT_USER_NAME:-}
            LANGFUSE_INIT_USER_PASSWORD: ${LANGFUSE_INIT_USER_PASSWORD:-}
            OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT:-http://localhost:4318}
            OTEL_SERVICE_NAME: web
            OTEL_TRACE_SAMPLING_RATIO: 1

    litellm:
        image: ghcr.io/berriai/litellm:main-stable
        command:
            - '--config=/app/config.yaml'
        ports:
            - '8080:8080'
            - '4000:4000'
        environment:
            DATABASE_URL: ${LITELLM_DATABASE_URL}
            STORE_MODEL_IN_DB: 'True'
            LITELLM_SALT_KEY: ${LITELLM_SALT_KEY}
            LITELLM_MASTER_KEY: ${LITELLM_MASTER_KEY}
            #GEMINI_API_KEY: ${GEMINI_API_KEY}
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
            REDIS_AUTH: ${REDIS_AUTH}
            UI_USERNAME: ${LITELLM_UI_USERNAME}
            UI_PASSWORD: ${LITELLM_UI_PASSWORD}
            LANGFUSE_PUBLIC_KEY: ${LANGFUSE_PUBLIC_KEY}
            LANGFUSE_SECRET_KEY: ${LANGFUSE_PRIVATE_KEY}
            LANGFUSE_API_URL: ${LANGFUSE_API_URL:-http://localhost:3000/api/public/otel}
        depends_on:
            - pgvector
            - redis
            - langfuse-web
        volumes:
            - ./litellm_config.yaml:/app/config.yaml

networks:
    default:
        driver: bridge

volumes:
    pgvector_data:
    redis_data:
    redisinsight_data:
    clickhouse_data:
    clickhouse_logs:
    minio_data:
